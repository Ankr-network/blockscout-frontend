name: Protocol backoffice deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Target
        required: true
        options:
          - stage #https://multirpc-backoffice-stage.dccn.ankr.com/
          - prod  #https://multirpc-backoffice.dccn.ankr.com/
      api:
        type: choice
        description: API
        required: true
        options:
          - STAGE
          - PROD

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: egordm/gha-yarn-node-cache@v1
      - uses: nelonoel/branch-name@v1.0.1

      - name: Get deployment information
        run: |
          echo "Branch: ${{github.ref}}"
          echo "Environment: ${{github.event.inputs.api}}"
          echo "Domain: ${{github.event.inputs.environment}}"

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version: '16.13.0'

      - name: Install dependencies
        run: |
            rm -rf node_modules/.cache
            yarn install

      - name: Build stage
        working-directory: ./packages/protocol-backoffice
        if: ${{ github.event.inputs.api == 'STAGE' }}
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
        run: |
          yarn build:stage

      - name: Build production
        working-directory: ./packages/protocol-backoffice
        if: ${{ github.event.inputs.api == 'PROD' }}
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
        run: |
          yarn build:prod

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Copy files to the staging website with the AWS CLI 
        working-directory: ./packages/protocol-backoffice
        if: ${{ github.event.inputs.api == 'STAGE' }}
        env:
          DOMAIN: ${{ secrets.MULTIRPC_BACKOFFICE_STAGE_DOMAIN }} 
          DISTRIBUTION_ID: ${{ secrets.MULTIRPC_BACKOFFICE_STAGE_DISTRIBUTION_ID }} 
        run: |
          aws s3 sync --delete ./build s3://$DOMAIN --acl public-read --cache-control "public,max-age=600,s-maxage=3600"
          aws configure set preview.cloudfront true
          echo "Invalidating CDN network"
          INVALIDATION_ID=`aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*' | jq -r '.Invalidation.Id'`
          echo "Invalidation ID is $INVALIDATION_ID"
          echo "CDN Invalidation request is sent."

      - name: Copy files to the production website with the AWS CLI 
        working-directory: ./packages/protocol-backoffice
        if: ${{ github.event.inputs.api == 'PROD' }}
        env:
          DOMAIN: ${{ secrets.MULTIRPC_BACKOFFICE_PROD_DOMAIN }} 
          DISTRIBUTION_ID: ${{ secrets.MULTIRPC_BACKOFFICE_PROD_DISTRIBUTION_ID }} 
        run: |
          aws s3 sync --delete ./build s3://$DOMAIN --acl public-read --exclude "admin/*" --cache-control "public,max-age=600,s-maxage=3600"
          aws configure set preview.cloudfront true
          echo "Invalidating CDN network"
          INVALIDATION_ID=`aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*' | jq -r '.Invalidation.Id'`
          echo "Invalidation ID is $INVALIDATION_ID"
          echo "CDN Invalidation request is sent."




