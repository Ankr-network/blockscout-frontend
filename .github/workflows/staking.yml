name: Staking deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Target
        required: true
        options:
          - STAGE # www-stage.ankr.com/staking/
          - PROD # www.ankr.com/staking/
          - BS5 # bs-5-stage.dccn.ankr.com/staking/
          - BS6 # bs-6-stage.dccn.ankr.com/staking/
          - BS7 # bs-7-stage.dccn.ankr.com/staking/
          - BS8 # bs-8-stage.dccn.ankr.com/staking/
      api:
        type: choice
        description: API
        required: true
        options:
          - DEV
          - STAGE
          - PROD

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: nelonoel/branch-name@v1.0.1
      - uses: actions/setup-node@v3
        with:
          node-version: '16.13.0'
          cache: 'yarn'

#      - name: Prevent wrong version releasing
#        if: ${{ github.event.inputs.environment == 'PROD' && github.ref != 'refs/heads/main' }}
#        run: |
#          echo "Production deployment is possible only from the main branch"
#          exit 1

      - name: Get deployment information
        run: |
          echo "Branch: ${BRANCH_NAME}"
          echo "Environment: ${{github.event.inputs.api}}"
          echo "Domain: ${{github.event.inputs.environment}}"

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build dev
        working-directory: ./packages/ankr-earn
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
        if: ${{ github.event.inputs.api == 'DEV' }}
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn build:dev:turbo
          yarn postbuild

      - name: Build stage
        working-directory: ./packages/ankr-earn
        if: ${{ github.event.inputs.api == 'STAGE' }}
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn build:stage:turbo
          yarn postbuild

      - name: Build production
        working-directory: ./packages/ankr-earn
        if: ${{ github.event.inputs.api == 'PROD' }}
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn build:prod:turbo
          yarn postbuild

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Copy files to the production website with the AWS CLI
        working-directory: ./packages/ankr-earn
        env:
          DOMAIN: ${{ secrets[format('{0}{1}', github.event.inputs.environment, '_DOMAIN')] }}
          DISTRIBUTION_ID: ${{ secrets[format('{0}{1}', github.event.inputs.environment, '_DISTRIBUTION_ID')] }}
        run: |
          aws s3 sync --delete ./build s3://$DOMAIN/staking/ --acl public-read --cache-control "public,max-age=600,s-maxage=3600"
          aws configure set preview.cloudfront true
          echo "Invalidating CDN network"
          INVALIDATION_ID=`aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*' | jq -r '.Invalidation.Id'`
          echo "Invalidation ID is $INVALIDATION_ID"
          echo "CDN Invalidation request is sent."
