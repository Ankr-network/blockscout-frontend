import { IWeb3KeyProvider } from "./interface";
export declare const EVENT_BEFORE_CONNECT = "web3#beforeConnect";
export declare const EVENT_AFTER_CONNECT = "web3#afterConnect";
export declare const EVENT_BEFORE_DISCONNECT = "web3#beforeDisconnect";
export declare const EVENT_AFTER_DISCONNECT = "web3#afterDisconnect";
export declare const EVENT_LATEST_BLOCK = "web3#latestBlock";
export declare const EVENT_BEFORE_SIGN_DATA = "web3#beforeSignData";
export declare const EVENT_AFTER_SIGN_DATA = "web3#afterSignData";
export declare const EVENT_BEFORE_SEND_TRANSACTION = "web3#beforeSendTransaction";
export declare const EVENT_AFTER_SEND_TRANSACTION = "web3#afterSendTransaction";
export interface IEventBeforeConnect {
    keyProvider: IWeb3KeyProvider;
    chainId: number;
}
export interface IEventAfterConnect {
    keyProvider: IWeb3KeyProvider;
    accounts: string[];
}
export interface IEventBeforeDisconnect {
    keyProvider: IWeb3KeyProvider;
}
export interface IEventAfterDisconnect {
    keyProvider: IWeb3KeyProvider;
}
export interface IEventLatestBlock {
    keyProvider: IWeb3KeyProvider;
    latestBlock: number;
}
export interface IEventBeforeSignData {
    keyProvider: IWeb3KeyProvider;
    data: any;
    signer: string;
}
export interface IEventAfterSignData {
    keyProvider: IWeb3KeyProvider;
    data: any;
    signer: string;
    sig: string;
}
export interface IEventBeforeSendTransaction {
    keyProvider: IWeb3KeyProvider;
    from: string;
    to: string;
    sendOptions: {
        data?: string;
        gasLimit?: string;
        value?: string;
        nonce?: number;
    };
}
export interface IEventAfterSendTransaction {
    keyProvider: IWeb3KeyProvider;
    from: string;
    to: string;
    sendOptions: {
        data?: string;
        gasLimit?: string;
        value?: string;
        nonce?: number;
    };
    transactionHash: string;
    rawTransaction: string;
}
