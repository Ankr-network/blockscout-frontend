import { IWeb3KeyProvider, IWeb3SendResult } from '@ankr.com/stakefi-web3';
import BigNumber from 'bignumber.js';
import { Base64, PrefixedHex, Web3Address } from "./types";
export declare class ContractManager {
    private readonly keyProvider;
    private readonly config;
    private readonly ankrWalletContract;
    private readonly ankrTokenContract;
    constructor(keyProvider: IWeb3KeyProvider, config: {
        ankrWalletContractAddress: PrefixedHex;
        ankrTokenContractAddress: PrefixedHex;
    });
    private readonly cachedEncryptionPublicKeys;
    getEncryptionPublicKey(account: Web3Address): Promise<Base64>;
    decryptMessageUsingPrivateKey(compatibleJsonData: string): Promise<string>;
    faucetAnkrTokensForTest(): Promise<void>;
    getLatestUserEventLogHash(user: Web3Address): Promise<PrefixedHex | false>;
    checkUserHaveEnoughAllowance(amount: BigNumber): Promise<boolean>;
    allowTokensForAnkrDeposit(amount: BigNumber): Promise<IWeb3SendResult | false>;
    depositAnkrToWallet(amount: BigNumber, expiresAfter?: string): Promise<{
        allowance?: IWeb3SendResult;
        deposit: IWeb3SendResult;
    }>;
    getCurrentAnkrBalance(): Promise<BigNumber>;
    getAnkrBalance(user: Web3Address): Promise<BigNumber>;
}
