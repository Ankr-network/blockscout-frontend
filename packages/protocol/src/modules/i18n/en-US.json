{
  "title": "RPC",
  "validation": {
    "required": "This field is required",
    "domain-validation": "Use the following URL format: example.com",
    "url-validation": "Should be a valid URL",
    "https-validation": "Should be a valid https URL",
    "url-check-health": "You entered the wrong network address or the block height on your endpoint is far behind",
    "ip-validation": "Should be a valid IP address",
    "email-validation": "Should be a valid email",
    "url-chain-validation": "URL must contain {chainId}",
    "public-url-validation": "Should not be a public endpoint of Ankr",
    "premium-url-validation": "Should not be a premium endpoint of Ankr",
    "duplicate-url-validation": "This endpoint has already been added",
    "number-only": "Must be a number",
    "min": "Should be greater than {value}",
    "max": "Should be less than {value}"
  },
  "meta": {
    "title": "Decentralized Infrastructure to Power Your dApp",
    "description": "Build now with RPCs to access over a dozen blockchains",
    "og-title": "Decentralized Infrastructure to Power Your dApp",
    "og-description": "Build now with RPCs to access over a dozen blockchains",
    "public": {
      "title": "Access a Variety of Public RPC Endpoints",
      "description": "Choose from over a dozen instant RPC endpoints and build on the chain of your choice",
      "og-title": "Your Gateway to Build on Web3",
      "og-description": "Get developer APIs, RPCs, exclusive endpoints& WebSockets for more chains",
      "h1-tag": "Find fast and reliable RPCs, APIs, and endpoints"
    },
    "chain-item": {
      "title": "Your Instant RPC Gateway to {chainId}",
      "description": "Experience unrestricted access to a decentralized {chainId} RPC for developers and DeFi users.",
      "og-title": "Build on {chainId} With Instant RPC Endpoint",
      "og-description": "Use a fast, reliable & free {chainId} public RPC endpoint",
      "h1-tag": "Access a fast, reliable, and decentralized {chainId} RPC"
    },
    "chain-item-bsc": {
      "title": "Your Instant RPC Gateway to {chainId}",
      "description": "Experience unrestricted access to a decentralized {chainId} RPC for developers and DeFi users.",
      "og-title": "Build on {chainId} With Instant RPC Endpoint",
      "og-description": "Start calling BSC now with our free public RPC endpoint"
    },
    "chain-item-fantom": {
      "title": "Your Instant RPC Gateway to {chainId}",
      "description": "Experience unrestricted access to a decentralized {chainId} RPC for developers and DeFi users.",
      "og-title": "Build on {chainId} With Instant RPC Endpoint",
      "og-description": "Call the Fantom chain with Ankr's free public RPC endpoint"
    },
    "chain-item-eth": {
      "title": "Your Instant RPC Gateway to {chainId}",
      "description": "Experience unrestricted access to a decentralized {chainId} RPC for developers and DeFi users.",
      "og-title": "Build on {chainId} With Instant RPC Endpoint",
      "og-description": "Use a decentralized and free Ethereum public RPC endpoint"
    }
  },
  "error": {
    "not-authenticated": "Not Authenticated",
    "unknown": "Unknown error",
    "contract-rejected": "Contract interaction rejected",
    "unexpected": "Unexpected error",
    "insufficient-permissions": "Insufficient permissions",
    "expired-session": "Your session has expired",
    "access-token-error": "Unable to obtain access token from multirpc-sdk",
    "credentials": "Credentials are not ready",
    "failed": "The transaction failed",
    "no-metamask": "No metamask extension found"
  },
  "main-navigation": {
    "dashboard": "Dashboard",
    "public-rpcs": "Public RPCs",
    "account-details": "Account Details",
    "plan": "Premium Plan",
    "protocol": "Node Providers",
    "endpoints": "Endpoints",
    "billing": "Billing",
    "pricing": "Pricing",
    "docs": "Docs"
  },
  "extra-navigation": {
    "docs": "Docs",
    "settings": "Settings",
    "faq": "FAQ"
  },
  "mobile-navigation": {
    "dashboard": "Dashboard",
    "public-rpcs": "Public RPCs",
    "account-details": "Account Details",
    "plan": "Premium Plan",
    "protocol": "Node Providers",
    "more": "More"
  },
  "language": {
    "en-US": "English"
  },
  "header": {
    "wallet-button": "Connect Wallet",
    "disconnect": "Disconnect",
    "already-premium": "Already Premium?"
  },
  "dashboard": {
    "breadcrumbs": "Premium Endpoints",
    "title": "Premium Endpoints",
    "provider-title": "Dashboard"
  },
  "chains": {
    "breadcrumbs": "Endpoints",
    "title": "Choose Your Network",
    "more-details": "More",
    "links": {
      "public": "{number} public links",
      "private": "{number} private links"
    },
    "integrate-button": "How to integrate",
    "requests": "{value} reqs",
    "req": "{value, number, ::compact-short} req",
    "archive": "Archive",
    "archive-tooltip-text": "Archived Mode makes it&nbsp;possible to&nbsp;reference a&nbsp;complete history of&nbsp;data kept on&nbsp;full nodes stretching back to&nbsp;the genesis block. This is&nbsp;necessary to&nbsp;complete queries to&nbsp;a&nbsp;distant historical state, such as&nbsp;a&nbsp;past account balance at&nbsp;block #4,000,000. It&nbsp;is&nbsp;especially useful for services like block explorers, wallet vendors, and chain analytics.",
    "add-endpoint": {
      "breadcrumbs": "Add Endpoint"
    },
    "sort": {
      "usage": "Sort by usage",
      "name": "Sort by name"
    },
    "timeframes": {
      "hour": "1h",
      "day": "24h",
      "month": "30d",
      "week": "7d"
    },
    "private-stats": {
      "title": "Your stats",
      "stats": {
        "total": "Total Requests Made",
        "failovers": "Total Requests Recovered",
        "successPercent": "Successful Requests %"
      }
    },
    "banner": {
      "dashboard": "If your volume exceeds 1M daily requests, our enterprise-grade service is for you.<br/>Contact us and switch to fast, secure, and dedicated infrastructure. Contact&nbsp;<a class=\"link\" href=\"mailto:sales@ankr.com\">sales@ankr.com</a>"
    }
  },
  "chain-item": {
    "chain-types": {
      "mainnet": "Mainnet",
      "testnet": "Testnet",
      "devnet": "Devnet"
    },
    "banner": {
      "plan": "Premium Plan.",
      "more": "Learn more",
      "features": {
        "block1": "Use faster global infrastructure",
        "block2": "WebSockets (WSS) capability",
        "block3": "No request rate limits",
        "block4": "Connect with a dedicated endpoint",
        "block5": "Prioritized requests during peak traffic"
      },
      "requests-per-day": "Requests per day",
      "requests-count": "20 mln"
    },
    "header": {
      "docs": "Docs",
      "mainnet-tab-title": "Mainnet",
      "testnet-tab-title": "Testnet",
      "devnet-tab-title": "Devnet",
      "endpoints-title": "Provider URLs",
      "private-endpoints-tooltip": "Use Provider URL as your main API endpoint for development. Do not use \"My Endpoints\" directly.",
      "public-endpoints-tooltip": "Use Provider URL as your main API endpoint for development.",
      "plural": "s",
      "settings-button": "Settings",
      "endpoint-groups": {
        "standard-evm-api": "Standard EVM API{plural}",
        "c-chain": "C-Chain{plural}",
        "p-chain": "P-Chain{plural}",
        "x-chain": "X-Chain{plural}",
        "etherium-endpoint": "Ethereum Endpoint{plural}",
        "nervos-evm": "Standard EVM and Polyjuice API{plural}",
        "nervos-gw": "Godwoken API{plural}",
        "nervos-ckb": "Nervos CKB Endpoint{plural}",
        "solana-api": "Solana API{plural}",
        "fallback": "{chain} Endpoint{plural}",
        "empty": "Endpoints will be available soon"
      }
    },
    "about-tron": {
      "about": "The new TronGrid REST API provides user-friendly read APIs with significantly reduced latency, improved consistency, improved availability, and added partition tolerance.",
      "learn-more": "Learn More"
    },
    "tabs": {
      "get-started": "Get Started",
      "infrastructure": "Infrastructure",
      "usage-data": "Usage Data"
    },
    "nervos": {
      "eth-based": "For Ethereum-based and Polyjuice methods",
      "godwoken-based": "For Godwoken methods"
    },
    "details": {
      "average-requests": "Average Requests/sec",
      "bandwidth": "Bandwidth",
      "cached-requests": "Cached Requests",
      "all-time": "All Time",
      "total-requests": "Total Requests"
    },
    "map": {
      "header": "Top 10 countries by requests",
      "stats-table": {
        "head": {
          "country": "Country",
          "requests": "Requests"
        },
        "value": "{value, number, ::compact-short}"
      },
      "no-data": {
        "title": "Send your request",
        "content": "Once you start sending requests, your activity will be visible here."
      }
    },
    "no-data": "No data available",
    "method-calls": {
      "title": "Method Calls",
      "download-button": "Report.csv",
      "total": "Total",
      "y-axis": "{value, number, ::compact-short}",
      "num-of-other-methods": "{num} other methods",
      "other-methods-text": "other methods",
      "other-methods": "Other methods"
    },
    "requests-by-ip": {
      "title": "Requests by IP",
      "ip": "IP",
      "http": "HTTP"
    },
    "request-composer": {
      "header": {
        "title": "Test RPC Methods",
        "chain": "Chain",
        "evm": "EVM",
        "connection": "Connection",
        "https": "HTTPS",
        "last-block-number": "Last block number"
      },
      "form": {
        "methods-label": "Methods",
        "methods-placeholder": "Please select method",
        "methods-no-options-text": "No such methods available",
        "arguments-title": "Possible Arguments",
        "button": "Send Request"
      },
      "logger": {
        "title": "Response logs",
        "clear-button": "Clear",
        "prefixes": {
          "error": "Error response: ",
          "time": "Response time: ",
          "success": "Node response: "
        },
        "messages": {
          "init": "Web3 URL detected…",
          "send-request": "Sending request for **{method}**: ",
          "response-time": "{ms}ms"
        }
      },
      "sample-code": {
        "copy": "Copy",
        "button": "View Sample Code"
      },
      "method-description": {
        "web3_clientVersion": "Returns the current client version.",
        "web3_sha3": "Returns Keccak-256 (not the standardized SHA3-256) of the given data.",
        "net_version": "Returns the current network id.",
        "net_listening": "Returns `true` if client is actively listening for network connections.",
        "net_peerCount": "Returns number of peers currently connected to the client.",
        "eth_protocolVersion": "Returns the current ethereum protocol version.",
        "eth_syncing": "Returns an object with data about the sync status or false.",
        "eth_coinbase": "Returns the client coinbase address.",
        "eth_mining": "Returns `true` if client is actively mining new blocks.",
        "eth_hashrate": "Returns the number of hashes per second that the node is mining with.",
        "eth_gasPrice": "Returns the current price per gas in wei.",
        "eth_accounts": "Returns a list of addresses owned by client.",
        "eth_blockNumber": "Returns the number of most recent block.",
        "eth_getBalance": "Returns the balance of the account of given address.",
        "eth_getStorageAt": "Returns the value from a storage position at a given address.",
        "eth_getTransactionCount": "Returns the number of transactions sent from an address.",
        "eth_getBlockTransactionCountByHash": "Returns the number of transactions in a block from a block matching the given block hash.",
        "eth_getBlockTransactionCountByNumber": "Returns the number of transactions in a block matching the given block number.",
        "eth_getUncleCountByBlockHash": "Returns the number of uncles in a block from a block matching the given block hash.",
        "eth_getUncleCountByBlockNumber": "Returns the number of uncles in a block from a block matching the given block number.",
        "eth_getCode": "Returns code at a given address.",
        "eth_sign": "🚫 This method is not supported!",
        "eth_signTransaction": "🚫 This method is not supported!",
        "eth_sendTransaction": "🚫 This method is not supported!",
        "eth_sendRawTransaction": "Creates new message call transaction or a contract creation for signed transactions.",
        "eth_call": "Call any read-only function on a deployed contract",
        "eth_estimateGas": "🚫 This method is not YET supported!",
        "eth_getBlockByHash": "Returns information about a block by hash.",
        "eth_getBlockByNumber": "Returns information about a block by block number.",
        "eth_getTransactionByHash": "Returns the information about a transaction requested by transaction hash.",
        "eth_getTransactionByBlockHashAndIndex": "Returns information about a transaction by block hash and transaction index position.",
        "eth_getTransactionByBlockNumberAndIndex": "Returns information about a transaction by block number and transaction index position.",
        "eth_getTransactionReceipt": "Returns the receipt of a transaction by transaction hash.",
        "eth_getUncleByBlockHashAndIndex": "Returns information about a uncle of a block by hash and uncle index position.",
        "eth_getUncleByBlockNumberAndIndex": "Returns information about a uncle of a block by number and uncle index position.",
        "eth_getCompilers": "Returns a list of available compilers in the client.",
        "eth_compileSolidity": "Returns compiled solidity code + ABI.",
        "eth_compileSerpent": "Returns compiled serpent code.",
        "eth_newFilter": "Creates a filter object, based on filter options, to notify when the state changes (logs).  The resulting value from the filter is immediately returned using `eth_getFilterChanges`.",
        "eth_newBlockFilter": "Creates a filter in the node, to notify when a new block arrives. The resulting value from the filter is immediately returned using `eth_getFilterChanges`.",
        "eth_newPendingTransactionFilter": "Creates a filter in the node, to notify when new pending transactions arrive. The resulting value from the filter is immediately returned using `eth_getFilterChanges`.",
        "eth_uninstallFilter": "🚫 This method is not YET supported!",
        "eth_getFilterChanges": "This method is covered by eth_newFilter, eth_newBlockFilter and eth_newPendingTransactionFilter.",
        "eth_getFilterLogs": "This method is covered by eth_newFilter, eth_newBlockFilter and eth_newPendingTransactionFilter.",
        "eth_getLogs": "This method is covered by eth_newFilter, eth_newBlockFilter and eth_newPendingTransactionFilter.",
        "eth_getWork": "Returns the hash of the current block, the seedHash, and the boundary condition to be met ('target').",
        "trace_block": "Returns traces created at given block (OpenEthereum or Parity only).",
        "trace_transaction": "Returns all traces of given transaction (OpenEthereum or Parity only).",
        "trace_get": "Returns trace at given position (OpenEthereum or Parity only).",
        "trace_rawTransaction": "Traces a call to `eth_sendRawTransaction` without making the call, returning the traces.",
        "trace_replayBlockTransactions": "Replays all transactions in a block returning the requested traces for each transaction.",
        "trace_replayTransaction": "Replays a transaction, returning the traces.",
        "trace_filter": "Returns traces matching given filter.",
        "trace_call": "Executes the given call and returns a number of possible traces for it.",
        "avalanche": {
          "c-chain": {
            "getAtomicTx": "Returns the transaction data of a provided transaction ID by calling the node's `getAtomicTx` method.",
            "export": "🚫 This method is not supported!</br>Export an asset from the C-Chain to X-Chain or P-Chain. After calling this method, you must call the X-Chain's avm.import or P-Chain's platform.import",
            "exportAVAX": "🚫 This method is not supported!</br>DEPRECATED—instead use avax.export.",
            "exportKey": "🚫 This method is not supported!</br>Get the private key that controls a given address. The returned private key can be added to a user with avax.importKey.",
            "getUTXOs": "Retrieves the UTXOs related to the addresses provided from the node's `getUTXOs` method.",
            "import": "🚫 This method is not supported!</br>Finalize the transfer of a non-AVAX or AVAX from X-Chain or P-Chain to the C-Chain. Before this method is called, you must call the X-Chain’s avm.export or P-Chain’s platform.exportAVAX with assetID AVAX to initiate the transfer.",
            "importAVAX": "🚫 This method is not supported!</br>DEPRECATED—instead use avax.import",
            "importKey": "🚫 This method is not supported!</br>Give a user control over an address by providing the private key that controls the address.",
            "issueTx": "Calls the node's issueTx method from the API and returns the resulting transaction ID as a string.",
            "getAtomicTxStatus": "Returns the status of a provided atomic transaction ID by calling the node's `getAtomicTxStatus` method."
          },
          "p-chain": {
            "addDelegator": "🚫 This method is not supported!</br>Add a delegator to the Primary Network.",
            "addValidator": "🚫 This method is not supported!</br>Add a validator to the Primary Network.",
            "addSubnetValidator": "🚫 This method is not supported!</br>Add a validator to a Subnet other than the Primary Network.",
            "createAddress": "🚫 This method is not supported!</br>Create a new address controlled by the given user.",
            "createBlockchain": "🚫 This method is not supported!</br>Create a new blockchain.",
            "createSubnet": "🚫 This method is not supported!</br>Create a new Subnet.",
            "exportAVAX": "🚫 This method is not supported!</br>Send AVAX from an address on the P-Chain to an address on the X-Chain or C-Chain.",
            "exportKey": "🚫 This method is not supported!</br>Get the private key that controls a given address.",
            "getBalance": "Get the balance of AVAX controlled by a given address.",
            "getBlockchains": "Get all the blockchains that exist (excluding the P-Chain).",
            "getBlockchainStatus": "Get the status of a blockchain.",
            "getCurrentSupply": "Returns an upper bound on the number of AVAX that exist.",
            "getCurrentValidators": "List the current validators of the given Subnet.",
            "getHeight": "Returns the height of the last accepted block.",
            "getMaxStakeAmount": "Returns the maximum amount of nAVAX staking to the named node during a particular time period.",
            "getMinStake": "Get the minimum amount of AVAX required to validate the Primary Network and the minimum amount of AVAX that can be delegated.",
            "getPendingValidators": "List the validators in the pending validator set of the specified Subnet. Each validator is not currently validating the Subnet but will in the future.",
            "getRewardUTXOs": "Returns the UTXOs that were rewarded after the provided transaction's staking or delegation period ended.",
            "getStakingAssetID": "Retrieve an assetID for a subnet’s staking asset. Currently, this only returns the Primary Network’s staking assetID.",
            "getSubnets": "Get info about the Subnets.",
            "getStake": "Get the amount of nAVAX staked by a set of addresses. The amount returned does not include staking rewards.",
            "getTimestamp": "Get the current P-Chain timestamp.",
            "getTotalStake": "Get the total amount of nAVAX staked on the Primary Network.",
            "getTx": "Gets a transaction by its ID.",
            "getTxStatus": "Gets a transaction’s status by its ID.",
            "getUTXOs": "Gets the UTXOs that reference a given set of addresses.",
            "getValidatorsAt": "Get the validators and their weights of a Subnet or the Primary Network at a given P-Chain height.",
            "importAVAX": "🚫 This method is not supported!</br>Complete a transfer of AVAX from the X-Chain, or C-Chain to the P-Chain.",
            "importKey": "🚫 This method is not supported!</br>Give a user control over an address by providing the private key that controls the address.",
            "issueTx": "Issue a transaction to the Platform Chain.",
            "listAddresses": "🚫 This method is not supported!</br>List addresses controlled by the given user.",
            "sampleValidators": "Sample validators from the specified Subnet.",
            "validatedBy": "Get the Subnet that validates a given blockchain.",
            "validates": "Get the IDs of the blockchains a Subnet validates."
          },
          "x-chain": {
            "buildGenesis": "🚫 This method is not supported!</br>A JSON representing the genesis data",
            "createAddress": "🚫 This method is not supported!</br>Create a new address controlled by the given user.",
            "createFixedCapAsset": "🚫 This method is not supported!</br>Create a new fixed-cap, fungible asset.",
            "mint": "🚫 This method is not supported!</br>Mint units of a variable-cap asset created with avm.createVariableCapAsset",
            "createVariableCapAsset": "Create a new variable-cap, fungible asset.",
            "createNFTAsset": "🚫 This method is not supported!</br>Create a new non-fungible asset.",
            "mintNFT": "🚫 This method is not supported!</br>Mint non-fungible tokens which were created with avm.createNFTAsset",
            "export": "🚫 This method is not supported!</br>Send an asset from the X-Chain to the P-Chain or C-Chain.",
            "exportKey": "🚫 This method is not supported!</br>Get the private key that controls a given address.",
            "getAllBalances": "Get the balances of all assets controlled by a given address.",
            "getAssetDescription": "Get information about an asset.",
            "getBalance": "Get the balance of an asset controlled by a given address.",
            "getAddressTxs": "Returns all transactions that change the balance of the given address.",
            "getTx": "Returns the specified transaction.",
            "getTxStatus": "Get the status of a transaction sent to the network.",
            "getUTXOs": "Gets the UTXOs that reference a given address.",
            "import": "🚫 This method is not supported!</br>Finalize a transfer of an asset from the P-Chain or C-Chain to the X-Chain.",
            "importKey": "🚫 This method is not supported!</br>Give a user control over an address by providing the private key that controls the address.",
            "issueTx": "Send a signed transaction to the network.",
            "listAddresses":"🚫 This method is not supported!</br>List addresses controlled by the given user.",
            "send": "🚫 This method is not supported!</br>List addresses controlled by the given user.",
            "sendMultiple": "🚫 This method is not supported!</br>Sends multiple transfers of amount of assetID, to a specified address from a list of owned addresses.",
            "sendNFT": "🚫 This method is not supported!</br>Send a non-fungible token."
          }
        },
        "tron": {
          "getblockbylimitnext": "Query a list of blocks by range.",
          "getblockbylatestnum": "Query the several latest blocks.",
          "broadcasttransaction": "Broadcast transaction after sign.",
          "broadcasthex": "Broadcast transaction hex string after sign.",
          "createtransaction": "Create a TRX transfer transaction. If to_address does not exist, then create the account on the blockchain.",
          "deploycontract": "Deploy a smart contract.",
          "triggersmartcontract": "Trigger smart contract.",
          "proposalcreate": "Create a proposal.",
          "exchangecreate": "Create an exchange pair.",
          "exchangeinject": "Inject funds for exchange pair.",
          "exchangewithdraw": "Withdraw from exchange pair.",
          "exchangetransaction": "Participate the transaction of exchange pair.",
          "getnowblock": "Query the latest block information.",
          "getblockbynum": "Query a block information by block height.",
          "getblockbyid": "Query a block information by block id.",
          "gettransactionbyid": "Query a transaction information by transaction id.",
          "getaccountbalance": "Get the account balance in a specific block.",
          "gettransactioncountbyblocknum": "Query the number of transactions in a specific block.",
          "gettransactioninfobyblocknum": "Query the list of transaction information in a specific block.",
          "getaccount": "Query an account information.",
          "getassetissuelist": "Query the list of all the tokens.",
          "getpaginatedassetissuelist": "Query the list of all the tokens by pagination.",
          "getpaginatedproposallist": "Query the list of all the proposals by pagination.",
          "getpaginatedexchangelist": "Query the list of all the exchange pairs by pagination.",
          "getcontract": "Query a contract.",
          "getproposalbyid": "Query a proposal by proposal id.",
          "listproposals": "Query all the proposals.",
          "getaccountresource": "Query the resource information of an account.",
          "getexchangebyid": "Query an exchange pair by exchange pair id.",
          "listexchanges": "Query the list of all the exchange pairs.",
          "getchainparameters": "Query the parameters of the blockchain used for witnesses to create a proposal.",
          "getdelegatedresource": "Query the energy delegation information.",
          "getdelegatedresourceaccountindex": "Query the energy delegation index by an account.",
          "getaccountbyid": "Query an account information by account id.",
          "getdeferredtransactionbyid": "Query the deferred transaction information by transaction id.",
          "getdeferredtransactioninfobyid": "Query the deferred transaction fee, block height by transaction id.",
          "triggerconstantcontract": "Trigger the constant of the smart contract, the transaction is off the blockchain.",
          "getmerkletreevoucherinfo": "To get a merkle tree infromation of a note.",
          "easytransferbyprivate": "🚫 This method is not supported!<br />TRX Easy transfer.",
          "easytransferassetbyprivate": "🚫 This method is not supported!<br />Token easy transfer.",
          "easytransfer": "🚫 This method is not supported!<br />Easy transfer.",
          "easytransferasset": "🚫 This method is not supported!<br />Easy token transfer.",
          "gettransactionsign": "🚫 This method is not supported!<br />To sign a transaction.",
          "createaddress": "🚫 This method is not supported!<br />Create an address with a password.",
          "listnodes": "🚫 This method is not supported!<br />Query the list of nodes connected to the ip of the api.",
          "generateaddress": "🚫 This method is not supported!<br />Generate address and private key.",
          "getnodeinfo": "🚫 This method is not supported!<br />Query the current node information.",
          "addtransactionsign": "🚫 This method is not supported!<br />To sign the transaction of trigger constant contract.",
          "getakfromask": "🚫 This method is not supported!<br />To get ak key from ask key.",
          "getnkfromnsk": "🚫 This method is not supported!<br />To get nk key from nsk key.",
          "getspendingkey": "🚫 This method is not supported!<br />To get spending key.",
          "getexpandedspendingkey": "🚫 This method is not supported!<br />To get expanded spending keys from spending key.",
          "getdiversifier": "🚫 This method is not supported!<br />To get diversifier.",
          "getincomingviewingkey": "🚫 This method is not supported!<br />To get incoming viewing key.",
          "createspendauthsig": "🚫 This method is not supported!<br />To create a signature for a transaction.",
          "getnewshieldedaddress": "🚫 This method is not supported!<br />To get new shieldedAddress.",
          "createshieldedtransaction": "🚫 This method is not supported!<br />To create shielded transaction, please refer to <a href='https://tronprotocol.github.io/documentation-en/mechanism-algorithm/shielded-transaction/' target='_blank'>The Demo</a>.",
          "createshieldedcontractparameters": "🚫 This method is not supported!<br />create the shielded TRC-20 transaction parameters, which has three types: mint, transfer and burn.",
          "createshieldedcontractparameterswithoutask": "🚫 This method is not supported!<br />create the shielded TRC-20 transaction parameters without Ask, which has three types: mint, transfer and burn.",
          "scanshieldedtrc20notesbyivk": "🚫 This method is not supported!<br />scan the shielded TRC-20 notes by ivk and mark their status of whether spent.",
          "scanshieldedtrc20notesbyovk": "🚫 This method is not supported!<br />scan the shielded TRC-20 notes by ovk.",
          "isshieldedtrc20contractnotespent": "🚫 This method is not supported!<br />check the status whether the specified shielded TRC-20 note is spent."
        }
      }
    },
    "nodes-table": {
      "header": "Nodes",
      "more": "Show 10 more",
      "empty": "There are no nodes to display",
      "tooltip-text": "Height, weight and availability of&nbsp;nodes depends on&nbsp;location.",
      "head": {
        "node": "Node",
        "height": "Height",
        "location": "Location",
        "weight": "Weight"
      }
    },
    "requests-table": {
      "header": "Most recent requests",
      "head": {
        "time": "Time",
        "command": "Command",
        "failed": "Failed",
        "success": "Success"
      }
    },
    "get-started": {
      "endpoints": {
        "add-network-label": "Add network",
        "premium-label": "Premium",
        "title": "{chainName} {rpcs, plural, =1 {Endpoint} other { Endpoints }}",
        "websocket-title": "WebSocket",
        "network-postfix": "{name} by ANKR Protocol"
      },
      "upgrade-banner": {
        "message": "Faster global infrastructure, WebSockets capability, Dedicated endpoints, Prioritized requests during peak traffic, No request rate limits, & much more.",
        "button": "Upgrade"
      },
      "connection-snippet": {
        "connection-types": {
          "http": "HTTP",
          "wss": "WSS"
        },
        "copy-code-button": {
          "copy-message": "Copied!",
          "label": "Copy code"
        },
        "expand-button": {
          "label": "Show All"
        },
        "technologies": {
          "curl": "Curl",
          "go": "Go",
          "python": "Python",
          "web3-js": "Web3.js"
        },
        "title": "Connection code snippet"
      }
    },
    "usage-data": {
      "usage-summary": {
        "total": "Total Requests",
        "average": "Average Req/Sec",
        "cached": {
          "title": "Cached Requests",
          "value": "{cached}%"
        },
        "cost": {
          "title": "Credit Usage",
          "value": "{cost, number, ::compact-short}"
        }
      },
      "chart": {
        "title": "Requests",
        "date": "{value, date, medium}",
        "time": "{value, time, short}",
        "calls-count": "{value, number, ::compact-short}",
        "placeholder": {
          "title": "Send your request",
          "subtitle": "Once you start sending requests, your data will be available here. Depending on your usage, you may not have data to show for the past 24 hours or 7 days. This will be populated only if you've made requests in those timeframes."
        }
      }
    }
  },
  "plan": {
    "breadcrumbs": "Pricing",
    "unlock-btn": "Connect Wallet",
    "learn-more": "Learn More",
    "more-questions": "Have more questions? Let's hear them!",
    "contact-discord": "Contact Support on Discord",
    "header": {
      "title": "Ship fast, scale and save with Premium features.",
      "sub-title": "We&nbsp;have just launched the <b>Pay as&nbsp;you&nbsp;Go</b> (PAYG) pricing model. You only pay for what you use. To&nbsp;start using all the premium features, make a&nbsp;<b>minimum deposit of&nbsp;1000&nbsp;ANKR</b> tokens to&nbsp;create your account.",
      "cost": "{value, number, ::compact-short}",
      "period": "year",
      "until": "Valid until the end of 2022",
      "sub-title2": "Limited-time, developer-first pricing that crushes the competition"
    },
    "purchase-block": {
      "title": "Start using your Premium Plan and pay as&nbsp;you&nbsp;go.",
      "sub-title": "<p>Tons of&nbsp;useful features are on&nbsp;their way&nbsp;&mdash; granular stats for your dApps, access control lists, multichain projects and much more.</p><p>Btw, if&nbsp;you don&rsquo;t need premium features anymore, you will be&nbsp;able to&nbsp;claim the unused ANKR tokens back to&nbsp;your wallet.</p>",
      "feature1": "No signup",
      "feature2": "No logins",
      "feature3": "Pay as you Go"
    },
    "features-block": {
      "feature1": "WebSockets (WS) Capabilities",
      "feature2": "More Requests To Power Your Project",
      "feature3": "View Blockchain Analytics",
      "feature4": "Globally Distributed Multi-Chain Infrastructure",
      "feature5": "Prioritized Requests During Peak Traffic",
      "feature6": "Dedicated Endpoints For All Supported Chains",
      "feature-full1": "Provide a constant stream of blockchain data to your application so your applications and platforms can be updated in real-time.",
      "feature-full2": "Scale your application to handle any amount of blockchain requests. Our premium plan serves dApps and platforms of all sizes.",
      "feature-full3": "See all on-chain activity and stay up to date on network activity with our analytics tools.",
      "feature-full4": "Our infrastructure is ready to serve your needs with lightning-fast and reliable returns no matter your location. Ankr removes the need for developers to run their own blockchain nodes, freeing up more time and money to focus on building!",
      "feature-full5": "Ankr Protocol will always prioritize our Premium users to ensure they receive every resource they need to develop and connect with chains.",
      "feature-full6": "Access to dedicated endpoints ensures that your project always has node resources to power it at the highest level of performance.  Build easier on any network with multi-chain infrastructure ready to handle any application’s needs."
    },
    "table": {
      "archive-data-info": "Developers can access and query on-chain information stretching all the way back to the genesis block.",
      "advanced-api-info": "Our Advanced API enables simultaneous data querying across multiple chains, allowing developers to build faster with fewer requests.",
      "high-traffic-info": "During peak RPC traffic times, public users are rate-limited to prioritize Premium users with node resources.",
      "rate-limit-info": "Rate limits cap the amount of request traffic on the public RPC to keep node resources balanced and available to all.",
      "choose-plan": "Choose your plan",
      "included": "What’s included",
      "public": "Public",
      "premium": "Premium",
      "free": "Free",
      "current-plan": "Current plan",
      "payg": "Pay as you go",
      "row1-col1": "Full and archive data",
      "row2-col1": "Advanced API",
      "row2-col1-sub": "Coming soon",
      "row3-col1": "Rate limit",
      "row4-col1": "Requests per day",
      "row5-col1": "Connection",
      "row6-col1": "Latency",
      "row7-col1": "Support",
      "row3-col2": "Limited during high traffic",
      "row4-col2": "Soft limit of 1M requests per day",
      "row5-col2": "HTTPS",
      "row6-col2": "US / EU based nodes",
      "row7-col2": "Discord Support",
      "row3-col3": "Unlimited",
      "row4-col3": "Unlimited requests",
      "row5-col3": "HTTPS and WebSockets",
      "row6-col3": "Global node coverage",
      "row7-col3": "Custom SLA",
      "no-rate-limit": "No rate limits",
      "unlimited-requests": "Unlimited Requests",
      "https-and-ws": "HTTPS & WebSockets requests",
      "https": "HTTPS requests",
      "global-coverage": "Global node coverage for low  latency",
      "sla": "SLA guaranteed support"
    },
    "deposit": {
      "breadcrumbs": "Deposit",
      "title": "Annual plan",
      "subtitle": "Deposit&nbsp;<b>10,000</b> ANKR&nbsp;to&nbsp;get access to <b>Premium&nbsp;features</b>",
      "remaining-block": "Remaining blocks: {value, number}",
      "advantages": {
        "private-endpoints": "Exclusive endpoints",
        "prioritized-requests": "Prioritized requests in&nbsp;times of&nbsp;congestion",
        "websockets": "WSS (Websockets)"
      },
      "agreement": {
        "text": "I&nbsp;understand that my&nbsp;wallet app will deposit these tokens and&nbsp;I will incur a&nbsp;gas fee. The deposit is&nbsp;non-refundable. Ankr cannot assist with lost passwords for wallet apps.",
        "button": "Deposit"
      },
      "validation": {
        "checkbox": "Please, check this box to proceed"
      }
    },
    "deposit-success": {
      "title": "Deposited Successfully",
      "subtitle": "We&nbsp;need your email so&nbsp;you can receive updates.",
      "email-form": {
        "alerts-label": "Important system alerts, protocol &amp;&nbsp;feature updates",
        "marketings-label": "Marketing emails",
        "done-button": "Done",
        "skip-button": "Skip"
      }
    },
    "pro": {
      "title": "Congratulations!",
      "subtitle": "<b>You have access</b> to all premium features"
    },
    "connect-wallet": {
      "title": "Already Premium?",
      "subtitle": "Connect wallet"
    }
  },
  "common": {
    "copy-message": "Copied!",
    "empty": "Empty...",
    "copy": "Copy",
    "close": "Close",
    "submit": "Submit"
  },
  "providers": {
    "endpoint": {
      "more-btn": "More",
      "title": "My endpoints",
      "button": "Add Endpoint",
      "tooltip-text": "You have reached the maximum number of endpoints ({limit}).",
      "chain-tooltip-text": "You don't have an access to add {chainId} endpoint.",
      "delete-dialog": {
        "info": "Are you sure you&rsquo;d like to&nbsp;remove {name} endpoint?",
        "remove": "Remove",
        "cancel": "Cancel"
      },
      "security": {
        "title": "Security",
        "tooltip-text": "Ensure the integrity of&nbsp;your requests by&nbsp;adding an&nbsp;extra layer of&nbsp;security with the domain (url referer or origin header) and&nbsp;IP address allowlist.",
        "domain": {
          "address-title": "Add website address",
          "address-count": "{value} max",
          "domains-title": "List of allowed websites"
        },
        "add-button": "Add",
        "ip": {
          "address-title": "Add IP address",
          "address-count": "{value} max",
          "domains-title": "List of allowed IP addresses"
        }
      }
    },
    "traffic-flow": {
      "title": "Your traffic flow",
      "items": {
        "item-1": "My Endpoints",
        "item-2": "Premium Nodes",
        "item-3": "Community Nodes"
      },
      "learn-more-button": {
        "title": "Learn More"
      }
    },
    "private-endpoints": {
      "title": "Premium Nodes",
      "tooltip": "Use Premium Endpoint as your main API endpoint for development. Do not use \"My Endpoints\" directly.",
      "plural": "s"
    },
    "user-endpoints": {
      "title": "My Endpoints",
      "tooltip": "Will be prioritized ahead of Premium Nodes when serving traffic."
    },
    "community-endpoints": {
      "title": "Community Nodes"
    },
    "editable-endpoints": {
      "edit": "Edit",
      "cancel": "Cancel",
      "save": "Save",
      "paste": "Paste"
    },
    "chains": {
      "title": "Select Chain",
      "button": "RPC Endpoint"
    },
    "add-endpoint": {
      "description": "You can import your personal endpoint, which will be used to process requests that are sent to your exclusive ANKR endpoint. In case of an error, the request will be processed by our nodes for premium users. Please enter a valid https endpoint address and the system will check it.",
      "http-input": "Endpoint address",
      "agreement": {
        "text": "I&nbsp;understand",
        "button": "Finish"
      }
    }
  },
  "user-settings": {
    "common": {
      "email-value-fallback": "the email provided"
    },
    "email-banner": {
      "add-step": {
        "title": "Add your Email",
        "description": "Get <b style='color: #356DF3'>100M Bonus API Credits</b> by adding your email.",
        "detailed-reports": "Detailed Reports",
        "balance-status": "Balance Status",
        "product-updates": "Product Updates",
        "exclusive-offers": "Exclusive Offers",
        "email-input-placeholder": "Your email",
        "not-show-again": "Don't show this message again"
      },
      "success-step": {
        "title": "Thank you!",
        "verify-email-text": "Please verify email that we sent to <b>{email}</b>",
        "resend-email-button": "Resend Email",
        "resend-email-button-sent": "Sent!",
        "change-email-button": "Change Email"
      }
    },
    "settings-screen": {
      "breadcrumbs": "Settings",
      "change-email-button": "Change Email"
    },
    "confirmation-screen": {
      "breadcrumbs": "Confirm Email"
    },
    "connect-wallet-card": {
      "title": "Connect Wallet",
      "description": "Connect related wallet to see notification settings.",
      "connect-wallet-button": "Connect Wallet"
    },
    "connect-related-wallet-card": {
      "title": "Connect Wallet for Related Account",
      "description": "Connect the wallet associated with your account to view notification settings.",
      "change-wallet-button": "Change Wallet"
    },
    "link-expired-card": {
      "title": "Link Expired",
      "description": "Please re-send a confirmation email to <b>{email}</b>",
      "resend-email-button": "Resend Email",
      "resend-email-button-sent": "Sent!",
      "change-email-button": "Change Email"
    },
    "errors": {
      "plural": "s",
      "change-with-same-email": "Please use an address that is different from your current one",
      "change-inexistent": "Attempting to change the email that hasn't been registered yet",
      "address-pending-other-email-binding": "There is an email address already associated with your wallet",
      "too-many-change-email-requests": "You can change your email once in {minutes} minute{plural}",
      "too-many-resend-confirmation-requests": "You can resend the confirmation email in {minutes} minute{plural}",
      "already-confirmed": "The email address {email} has already been registered",
      "invalid-email": "The email address `{email}` is invalid"
    },
    "notifications": {
      "title": "Notifications",
      "form": {
        "balance-updates": {
          "title": "Balance updates",
          "description": "Top ups, withdrawals, voucher credits added, and other updates."
        },
        "marketing": "Ankr RPC updates and marketing materials",
        "low-balance": "Running out of funds",
        "low-balance-3-days": "Less than 3 days balance left",
        "low-balance-7-days": "Less than 7 days balance left"
      },
      "success": "Settings Saved"
    },
    "change-email-dialog": {
      "title": "Changing Email",
      "success-step": {
        "verify-email-text": "Please verify email that we sent to <b>{email}</b>"
      }
    }
  },
  "account": {
    "currencies": {
      "ankr": "ANKR",
      "credit": "Credits",
      "usd": "USD"
    },
    "balance": "{balance, number, ::compact-short}",
    "operation-loader": "Checking transactions",
    "account-details": {
      "breadcrumbs": "Billing",
      "title": "Account Details",
      "top-up": {
        "title": "Top Up Balance",
        "pricing-link": "Pricing",
        "placeholder": "Amount",
        "button": "Top Up",
        "continue-button": "Continue Top Up",
        "continue": "Continue"
      },
      "balance": {
        "title": "Balance",
        "withdrawButton": {
          "title": "Withdraw"
        },
        "descriptions": {
          "new": {
            "extra": "Top up your balance to use our service."
          },
          "premium": {
            "main": "Your premium subscription is active till {date, time, ::dMMMy}.",
            "extra": "Then you'll have to Top Up your balance to continue using premium features."
          },
          "premium-expired": {
            "main": "Your premium subscription is ended.",
            "extra": "Top up your balance to continue using our service."
          },
          "payg-active": {
            "extra": "Enough for {quantifier}{time} {period}, based on your current usage."
          },
          "payg-inactive": {
            "extra": "Top up your balance to continue using our service."
          },
          "payg-warning": {
            "extra": "Enough for just {quantifier}{time} {period}, based on your current usage."
          },
          "payg-warning-zero": {
            "extra": "Based on the current usage, it may not be enough for your needs. Top Up your balance to continue taking full advantage of our service."
          },
          "periods": {
            "day": "day{plural}",
            "month": "month{plural}",
            "year": "year{plural}",
            "plural": "s"
          },
          "quantifiers": {
            "approximately": "~",
            "more": "more than "
          }
        }
      },
      "expense-chart": {
        "title": "Expense Chart",
        "timeframes": {
          "week": "Past week",
          "month": "Past month",
          "year": "Past year"
        },
        "chart": {
          "short-date": "{value, time, ::dMMM}",
          "medium-date": "{value, date, medium}",
          "expense": "{value, number, ::compact-short}"
        }
      }
    },
    "payment-table": {
      "title": "Payments History",
      "date-time": "{value, date, medium} {value, time, short}",
      "more": "Show 10 more",
      "empty": "No data for the selected filter parameters.",
      "head": {
        "col-1": "Date & Time",
        "col-2": "Payment type",
        "col-3": "Amount USD",
        "col-4": "Amount ANKR"
      },
      "csv-title": "Payment charging for {month} {day}, {year}",
      "payment-type": {
        "placeholder": "Payment type",
        "all": "All",
        "unknown": "Unknown",
        "top-up": "Top up",
        "deduction": "Payment charging",
        "withdrawal": "Withdrawal",
        "bonus": "Bonus",
        "compensation": "Compensation",
        "voucher": "Voucher operations"
      },
      "time-type": {
        "week": "Past week",
        "month": "Past month",
        "year": "Past year"
      }
    },
    "top-up": {
      "breadcrumbs": "Top Up",
      "title": "Top Up"
    },
    "withdraw": {
      "breadcrumbs": "Withdraw",
      "title": "Withdraw"
    },
    "card-payment-success": {
      "breadcrumbs": "Billing",
      "title": "Everything looks good!",
      "description": "After Ethereum network validation you will see your updated wallet balance and Premium Endpoints. Usual waiting time is ≈15 min.",
      "button": "Go to Billing"
    },
    "card-payment-failure": {
      "breadcrumbs": "Billing",
      "title": "Something going wrong!",
      "description": "Please try again later or contact our support team.",
      "button": "Try Again"
    }
  },
  "pro-block": {
    "label": "Premium features"
  },
  "top-up-steps": {
    "title": "Top Up",
    "metamask": "Metamask",
    "step-content": {
      "0": "I&nbsp;understand my&nbsp;wallet will make a&nbsp;top-up that includes a&nbsp;gas fee. Ankr cannot provide assistance if&nbsp;I lose access to&nbsp;my&nbsp;wallet and the associated account.",
      "1": "Click Confirm and allow&nbsp;us to&nbsp;use your {amount}&nbsp;ANKR in <img src=\"{src}\" alt=\"{alt}\" class=\"icon\" /> Metamask extension.",
      "2": "Click Confirm and allow&nbsp;us to&nbsp;spend your {amount}&nbsp;ANKR in <img src=\"{src}\" alt=\"{alt}\" class=\"icon\" /> Metamask extension.",
      "3": "Thank you! Transaction<br/> is&nbsp;on&nbsp;the way.",
      "3-error": "Oops! Transaction has not been completed.",
      "4": "Finally, click Done and decrypt the message in <img src=\"{src}\" alt=\"{alt}\" class=\"icon\" /> Metamask extension."
    },
    "step-notice": {
      "1": "So&nbsp;we&nbsp;could top up&nbsp;your balance.",
      "2": "If&nbsp;you changed your mind, click Cancel and give&nbsp;us permission to&nbsp;access your Ankr again so&nbsp;we&nbsp;could revoke your Top&nbsp;Up",
      "3": "After Ethereum network validation you will see updated balance of&nbsp;your wallet.",
      "3-error": "Don’t worry, your funds are safe. Just try again.",
      "4": "The last step in&nbsp;your top up&nbsp;process."
    },
    "button": {
      "0": "Next",
      "1": "Confirm",
      "1-loading": "Check Metamask",
      "2": "Confirm",
      "2-loading": "Check Metamask",
      "3": "Next",
      "3-loading": "Please wait",
      "3-done": "Done",
      "3-error": "Try Again",
      "4-loading": "Please wait",
      "4": "Done",
      "reject": "Cancel"
    },
    "copy-button": "Copy TxID",
    "confirm": "Сonfirm",
    "wait": "Please wait",
    "transaction-confirmation-button": "Block {block} of {totalBlocks}"
  },
  "withdraw-steps": {
    "title": "Withdraw",
    "disabled-content": "We&rsquo;ve pegged the price of&nbsp;our API Credits to&nbsp;USD. For now, with regards to&nbsp;withdrawals, it&nbsp;means that they are to&nbsp;be&nbsp;requested via Support only.",
    "step-content": {
      "0": "I&nbsp;understand my&nbsp;withdrawal could be&nbsp;less after any pending charges are subtracted. The processing time will depend on&nbsp;the Ethereum network load.",
      "1": "How much would you like to withdraw?",
      "2": "Thank you! Transaction is on the way.",
      "2-error": "Oops! Transaction has not been completed.",
      "3": "Your request for withdrawal is&nbsp;submitted."
    },
    "step-notice": {
      "2": "After 12&nbsp;block validations, our system will perform the final calculation. This may take up&nbsp;to&nbsp;15&nbsp;minutes",
      "2-error": "Don’t worry, your funds are safe. Just try again.",
      "3": "It&nbsp;will take up&nbsp;to&nbsp;15&nbsp;minutes for our system to&nbsp;finish the calculation. You can leave this page now."
    },
    "button": {
      "0": "Next",
      "1": "Confirm",
      "1-loading": "Check Metamask",
      "2": "Next",
      "2-loading": "Please wait",
      "2-error": "Try Again",
      "3": "Done",
      "3-loading": "Please wait"
    },
    "form": {
      "balance-error": "You cannot make a withdrawal as your balance is zero or negative",
      "min": "The minimum withdrawal amount is {value} ANKR",
      "max": "You cannot make a withdrawal, as your balance is less than {value} ANKR",
      "excess": "The entered amount exceeds your balance",
      "balance": "You can withdraw <b>{value} ANKR</b>",
      "credits": "<b>{value} voucher credits</b> can&rsquo;t be&nbsp;claimed",
      "credits-info": "Voucher credits are also used for payment. They are equivalent to&nbsp;ordinary credits but cannot be&nbsp;withdrawn in&nbsp;ANKR tokens."
    }
  },
  "continents": {
    "AS": "Asia",
    "EU": "Europe",
    "AF": "Africa",
    "NA": "North America",
    "SA": "South America",
    "AN": "Antarctica",
    "OC": "Oceania"
  },
  "web3Schemes": {
    "web3": "Web3 (EVM)",
    "evm": "Web3 (EVM)",
    "solana": "Web3 (Solana)",
    "nervos": "Web3 (EVM)",
    "godwoken": "Web3 (Godwoken)",
    "iotex": "Web3 (EVM)",
    "near": "Web3 (EVM)",
    "harmony": "Web3 (EVM)",
    "moonbeam": "Web3 (EVM)"
  },
  "error-boundary": {
    "common": {
      "title": "Oops!",
      "description": "Something goes wrong.",
      "button": "Reload Page"
    },
    "chunk-load-error": {
      "title": "Service is updating",
      "description": "Try reloading the page",
      "button": "Reload Page"
    }
  }
}
